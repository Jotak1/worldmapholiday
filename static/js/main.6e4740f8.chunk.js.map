{"version":3,"sources":["components/Header.js","components/Spinner.js","components/Error.js","components/Holidays.js","components/ModalDial.js","components/MapChart.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","Typography","variant","Button","color","href","target","iconcolor","Spinner","Error","table","minWidth","Holidays","Country","React","useState","result","setResult","loading","setLoading","error","setError","errormsg","setErrorMsg","thisyear","Date","getFullYear","APIcountry","useEffect","a","axios","get","method","credentials","headers","redirect","referrerPolicy","then","response","data","catch","err","consultarApi","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","date","localName","name","Transition","forwardRef","props","ref","Slide","direction","ModalDial","open","handleClose","valor1","valor","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","TransitionComponent","PaperProps","style","backgroundColor","boxShadow","DialogTitle","id","DialogContentText","DialogContent","DialogActions","onClick","mapStyles","width","height","MapChart","setTooltipContent","setOpen","setValor","setValor1","data-tip","projectionConfig","scale","stroke","strokeWidth","geography","geographies","proj","geo","projection","onMouseEnter","num","properties","NAME","ISO_A2","POP_EST","Math","round","onMouseLeave","long","default","fill","outline","hover","pressed","rsmKey","memo","App","content","setContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e4740f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n               World Map Holidays\r\n            </Typography>\r\n            <Button color=\"inherit\" href=\"https://github.com/Jotak1\" target=\"blank\">\r\n                  <GitHubIcon className={classes.iconcolor}  />\r\n            </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return ( \r\n        <div className=\"alert\">\r\n            <p className=\"alert-message\">An error has occurred!</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Error;","import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Spinner from './Spinner';\r\nimport Error from './Error';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nfunction Holidays({Country}) {\r\n    const [result, setResult] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n    const [errormsg, setErrorMsg] = React.useState([]);\r\n\r\n    const thisyear = new Date().getFullYear();\r\n    const APIcountry =`https://date.nager.at/api/v2/publicholidays/${thisyear}/${Country}`;\r\n    useEffect(() => {\r\n        const consultarApi = async () => {\r\n            await axios.get(APIcountry, {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors', // no-cors, *cors, same-origin\r\n                // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Access-Control-Allow-Origin' : 'https://Jotak1.github.io/'\r\n\r\n                //   'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                // body: JSON.stringify(response) // body data type must match \"Content-Type\" header\r\n              })\r\n            .then(response => {\r\n                setResult(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                \r\n                setErrorMsg(err);\r\n                setError(true);\r\n                 setLoading(false);\r\n            })\r\n        \r\n           \r\n        };\r\n        consultarApi();\r\n    },[]);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Spinner/> : (error ?  <Error errormsg={errormsg}/> : (\r\n           <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell align=\"right\">Local Name</TableCell>\r\n                    <TableCell align=\"right\">Name</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {result.map((row) => (\r\n                    <TableRow key={row.date+row.localName}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {row.date}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.localName}</TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>) )}\r\n        </div>\r\n    );\r\n}\r\nexport default Holidays;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button, DialogContentText } from \"@material-ui/core\";\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Holidays from \"./Holidays\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nconst ModalDial = ({open,handleClose,valor1,valor}) => {\r\n    return ( \r\n        <Dialog\r\n        fullWidth={true}\r\n        maxWidth=\"lg\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n            style: {\r\n            backgroundColor: 'white',\r\n            boxShadow: 'none',\r\n            },\r\n        }}>\r\n        <DialogTitle id=\"max-width-dialog-title\">\r\n          \r\n          <DialogContentText>\r\n          Holidays in {valor1}\r\n          </DialogContentText>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <Holidays Country={valor}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n                <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                    X\r\n                </Button>\r\n            </DialogActions>\r\n        \r\n      </Dialog>\r\n     );\r\n}\r\n \r\nexport default ModalDial;","import React, { memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n} from \"react-simple-maps\";\r\nimport ModalDial from \"./ModalDial\";\r\n\r\n\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst rounded = num => {\r\n  if (num > 1000000000) {\r\n    return Math.round(num / 100000000) / 10 + \"Bn\";\r\n  } else if (num > 1000000) {\r\n    return Math.round(num / 100000) / 10 + \"M\";\r\n  } else {\r\n    return Math.round(num / 100) / 10 + \"K\";\r\n  }\r\n};\r\n\r\nconst mapStyles = {\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n  };\r\n\r\n\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [valor, setValor] = React.useState([]);\r\n  const [valor1, setValor1] = React.useState([]);\r\n\r\n  const handleClickOpen = (abr, long ) => { \r\n      setValor(abr);\r\n      setValor1(long);\r\n      setOpen(true); \r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n  return (\r\n    <div>\r\n      <ComposableMap \r\n        data-tip=\"\" \r\n         projectionConfig={{ scale: 200}} style={mapStyles}>\r\n        \r\n        <ZoomableGroup>\r\n        <Sphere stroke=\"#FF5533\" strokeWidth={1} />\r\n          <Geographies  geography={geoUrl}>\r\n            {({ geographies, proj }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  projection={proj}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME, ISO_A2, POP_EST } = geo.properties;\r\n                    setTooltipContent(`${NAME} - ${ISO_A2} — ${rounded(POP_EST)}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  onClick={() => {\r\n                    const { NAME, ISO_A2 } = geo.properties;\r\n                    handleClickOpen(ISO_A2, NAME );\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                      stroke: \"black\",\r\n                      strokeWidth: \"0.5px\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <ModalDial\r\n        open={open}\r\n        handleClose={handleClose}\r\n        valor1={valor1}\r\n        valor={valor}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React, {  useState } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport MapChart from \"./components/MapChart\";\r\n\r\nconst App = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n      <MapChart setTooltipContent={setContent} />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}